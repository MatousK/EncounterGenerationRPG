using System.Collections.Generic;
using Assets.Scripts.EncounterGenerator.Model;
using UnityEngine;

namespace Assets.Scripts.EncounterGenerator.Configuration
{
    /// <summary>
    /// Child classes of this class specify a list of monsters that can appear in a room in an encounter.
    /// The generator can use it to turn a <see cref="EncounterDefinition"/> to the list of monsters that should actually be spawned.
    /// </summary>
    public abstract class MonsterGroupDefinition: ScriptableObject
    {
        /// <summary>
        /// Generates a group of monsters based on the parameters passed by the generator.
        /// </summary>
        /// <param name="parameters">The parameters for the generation.</param>
        /// <returns>The group of generated monsters. Returns prefabs which should then be instantiated by the generator.</returns>
        public abstract List<GameObject> GenerateMonsterGroup(GenerateMonsterGroupParameters parameters);
        /// <summary>
        /// Should return all monster types that can be potentially be generated by this group and which the algorithm can request.
        /// </summary>
        /// <returns>The list of monsters that could be generated.</returns>
        public abstract List<MonsterType> GetAvailableMonsterTypes();
    }
}